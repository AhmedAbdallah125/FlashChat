{
    "sourceFile": "lib/componnt/message_stream.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 29,
            "patches": [
                {
                    "date": 1633529041137,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1633529093119,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,23 +26,23 @@\n         // to specify what kind of returnded data --> make stream builder of Query Snap Shot\r\n         final messages = snapshot.data.docs;\r\n         // return list of Query Document Snap Shot\r\n         // so we must iterate in it to get all its elemnts\r\n-        List<MessageBubble> BubbleWidgets = [];\r\n+        List<MessageBubble> messageBubbles = [];\r\n         for (var message in messages) {\r\n           final mapData = message.data() as Map<String, dynamic>;\r\n           final messageText = mapData['text'];\r\n           final messageSnder = mapData['sender'];\r\n \r\n           // then add it to list\r\n-          BubbleWidgets.add(\r\n-              MessageBubble(mText: messageText, mSender: messageSnder));\r\n+          messageBubbles\r\n+              .add(MessageBubble(mText: messageText, mSender: messageSnder));\r\n         }\r\n \r\n         return Expanded(\r\n           child: ListView(\r\n             padding: EdgeInsets.symmetric(horizontal: 5, vertical: 10),\r\n-            children: BubbleWidgets,\r\n+            children: messageBubbles,\r\n           ),\r\n         );\r\n       },\r\n     );\r\n"
                },
                {
                    "date": 1633529144115,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,7 @@\n import 'package:cloud_firestore/cloud_firestore.dart';\r\n import 'package:flutter/material.dart';\r\n \r\n-import 'message_bubble.dart';\r\n-\r\n class MessageStram extends StatelessWidget {\r\n   final fireStore;\r\n   MessageStram({this.fireStore});\r\n   @override\r\n@@ -47,4 +45,42 @@\n       },\r\n     );\r\n   }\r\n }\r\n+\r\n+class MessageBubble extends StatelessWidget {\r\n+  // provide text and sender\r\n+  // make them final to be intialize once at conxtructor\r\n+  final String mText, mSender;\r\n+  MessageBubble({this.mText, this.mSender});\r\n+  @override\r\n+  Widget build(BuildContext context) {\r\n+    // to change background of text\r\n+    // wrap it in material\r\n+    return Column(\r\n+      mainAxisAlignment: MainAxisAlignment.start,\r\n+      crossAxisAlignment: CrossAxisAlignment.end,\r\n+      children: [\r\n+        Text(\r\n+          mSender,\r\n+          style: TextStyle(\r\n+              fontSize: 12,\r\n+              // color to make it little lighter\r\n+              color: Colors.black54),\r\n+        ),\r\n+        Padding(\r\n+            padding: EdgeInsets.symmetric(horizontal: 20, vertical: 5),\r\n+            child: Material(\r\n+                elevation: 5,\r\n+                borderRadius: BorderRadius.circular(30),\r\n+                color: Colors.lightBlue,\r\n+                child: Padding(\r\n+                  padding: EdgeInsets.all(10),\r\n+                  child: Text(\r\n+                    mText,\r\n+                    style: TextStyle(fontSize: 20, color: Colors.white),\r\n+                  ),\r\n+                ))),\r\n+      ],\r\n+    );\r\n+  }\r\n+}\r\n"
                },
                {
                    "date": 1633531134822,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,11 @@\n import 'package:cloud_firestore/cloud_firestore.dart';\r\n+import 'package:firebase_auth/firebase_auth.dart';\r\n import 'package:flutter/material.dart';\r\n \r\n class MessageStram extends StatelessWidget {\r\n   final fireStore;\r\n+  // final User logg=User;\r\n   MessageStram({this.fireStore});\r\n   @override\r\n   Widget build(BuildContext context) {\r\n     return // stream- -> that where data comes from\r\n@@ -25,13 +27,17 @@\n         final messages = snapshot.data.docs;\r\n         // return list of Query Document Snap Shot\r\n         // so we must iterate in it to get all its elemnts\r\n         List<MessageBubble> messageBubbles = [];\r\n+\r\n         for (var message in messages) {\r\n           final mapData = message.data() as Map<String, dynamic>;\r\n           final messageText = mapData['text'];\r\n           final messageSnder = mapData['sender'];\r\n \r\n+          // if(messageSnder!=logg){\r\n+\r\n+          // }\r\n           // then add it to list\r\n           messageBubbles\r\n               .add(MessageBubble(mText: messageText, mSender: messageSnder));\r\n         }\r\n"
                },
                {
                    "date": 1633531188118,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,5 @@\n import 'package:cloud_firestore/cloud_firestore.dart';\r\n-import 'package:firebase_auth/firebase_auth.dart';\r\n import 'package:flutter/material.dart';\r\n \r\n class MessageStram extends StatelessWidget {\r\n   final fireStore;\r\n"
                },
                {
                    "date": 1633532963443,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,11 +1,12 @@\n import 'package:cloud_firestore/cloud_firestore.dart';\r\n+import 'package:firebase_auth/firebase_auth.dart';\r\n import 'package:flutter/material.dart';\r\n \r\n class MessageStram extends StatelessWidget {\r\n   final fireStore;\r\n-  // final User logg=User;\r\n-  MessageStram({this.fireStore});\r\n+  final User logIn;\r\n+  MessageStram({this.fireStore, this.logIn});\r\n   @override\r\n   Widget build(BuildContext context) {\r\n     return // stream- -> that where data comes from\r\n         // builder build stargey --> provide the logic for the stream should actually do\r\n@@ -26,20 +27,30 @@\n         final messages = snapshot.data.docs;\r\n         // return list of Query Document Snap Shot\r\n         // so we must iterate in it to get all its elemnts\r\n         List<MessageBubble> messageBubbles = [];\r\n+        // list for other user to show them in different\r\n+        List<MessageBubble> otherBubbles = [];\r\n \r\n         for (var message in messages) {\r\n           final mapData = message.data() as Map<String, dynamic>;\r\n           final messageText = mapData['text'];\r\n           final messageSnder = mapData['sender'];\r\n \r\n-          // if(messageSnder!=logg){\r\n-\r\n-          // }\r\n-          // then add it to list\r\n-          messageBubbles\r\n-              .add(MessageBubble(mText: messageText, mSender: messageSnder));\r\n+          if (messageSnder != logIn) {\r\n+            otherBubbles.add(MessageBubble(\r\n+              mText: messageText,\r\n+              mSender: messageSnder,\r\n+              color: Colors.blue,\r\n+            ));\r\n+          } else {\r\n+            // then add it to list\r\n+            messageBubbles.add(MessageBubble(\r\n+              mText: messageText,\r\n+              mSender: messageSnder,\r\n+              color: Colors.lightBlueAccent,\r\n+            ));\r\n+          }\r\n         }\r\n \r\n         return Expanded(\r\n           child: ListView(\r\n@@ -55,9 +66,11 @@\n class MessageBubble extends StatelessWidget {\r\n   // provide text and sender\r\n   // make them final to be intialize once at conxtructor\r\n   final String mText, mSender;\r\n-  MessageBubble({this.mText, this.mSender});\r\n+  final Color color;\r\n+\r\n+  MessageBubble({this.mText, this.mSender, this.color});\r\n   @override\r\n   Widget build(BuildContext context) {\r\n     // to change background of text\r\n     // wrap it in material\r\n@@ -76,9 +89,9 @@\n             padding: EdgeInsets.symmetric(horizontal: 20, vertical: 5),\r\n             child: Material(\r\n                 elevation: 5,\r\n                 borderRadius: BorderRadius.circular(30),\r\n-                color: Colors.lightBlue,\r\n+                color: color,\r\n                 child: Padding(\r\n                   padding: EdgeInsets.all(10),\r\n                   child: Text(\r\n                     mText,\r\n"
                },
                {
                    "date": 1633533041043,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,9 +36,9 @@\n           final messageText = mapData['text'];\r\n           final messageSnder = mapData['sender'];\r\n \r\n           if (messageSnder != logIn) {\r\n-            otherBubbles.add(MessageBubble(\r\n+            messageBubbles.add(MessageBubble(\r\n               mText: messageText,\r\n               mSender: messageSnder,\r\n               color: Colors.blue,\r\n             ));\r\n"
                },
                {
                    "date": 1633533054304,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,9 +39,9 @@\n           if (messageSnder != logIn) {\r\n             messageBubbles.add(MessageBubble(\r\n               mText: messageText,\r\n               mSender: messageSnder,\r\n-              color: Colors.blue,\r\n+              color: Colors.green,\r\n             ));\r\n           } else {\r\n             // then add it to list\r\n             messageBubbles.add(MessageBubble(\r\n"
                },
                {
                    "date": 1633682822364,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,17 +27,18 @@\n         final messages = snapshot.data.docs;\r\n         // return list of Query Document Snap Shot\r\n         // so we must iterate in it to get all its elemnts\r\n         List<MessageBubble> messageBubbles = [];\r\n-        // list for other user to show them in different\r\n-        List<MessageBubble> otherBubbles = [];\r\n \r\n         for (var message in messages) {\r\n           final mapData = message.data() as Map<String, dynamic>;\r\n           final messageText = mapData['text'];\r\n           final messageSnder = mapData['sender'];\r\n \r\n-          if (messageSnder != logIn) {\r\n+          // get loggined user email\r\n+          final currentUser = logIn.email;\r\n+\r\n+          if (messageSnder != currentUser) {\r\n             messageBubbles.add(MessageBubble(\r\n               mText: messageText,\r\n               mSender: messageSnder,\r\n               color: Colors.green,\r\n"
                },
                {
                    "date": 1633684758677,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,22 +36,15 @@\n \r\n           // get loggined user email\r\n           final currentUser = logIn.email;\r\n \r\n-          if (messageSnder != currentUser) {\r\n+          \r\n             messageBubbles.add(MessageBubble(\r\n               mText: messageText,\r\n               mSender: messageSnder,\r\n-              color: Colors.green,\r\n+              isUser: messageSnder==currentUser,\r\n             ));\r\n-          } else {\r\n-            // then add it to list\r\n-            messageBubbles.add(MessageBubble(\r\n-              mText: messageText,\r\n-              mSender: messageSnder,\r\n-              color: Colors.lightBlueAccent,\r\n-            ));\r\n-          }\r\n+          \r\n         }\r\n \r\n         return Expanded(\r\n           child: ListView(\r\n@@ -67,11 +60,11 @@\n class MessageBubble extends StatelessWidget {\r\n   // provide text and sender\r\n   // make them final to be intialize once at conxtructor\r\n   final String mText, mSender;\r\n-  final Color color;\r\n+  final isUser;\r\n \r\n-  MessageBubble({this.mText, this.mSender, this.color});\r\n+  MessageBubble({this.mText, this.mSender, this.isUser);\r\n   @override\r\n   Widget build(BuildContext context) {\r\n     // to change background of text\r\n     // wrap it in material\r\n@@ -90,9 +83,9 @@\n             padding: EdgeInsets.symmetric(horizontal: 20, vertical: 5),\r\n             child: Material(\r\n                 elevation: 5,\r\n                 borderRadius: BorderRadius.circular(30),\r\n-                color: color,\r\n+                color: Colors.lightBlueAccent,\r\n                 child: Padding(\r\n                   padding: EdgeInsets.all(10),\r\n                   child: Text(\r\n                     mText,\r\n"
                },
                {
                    "date": 1633772644919,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -69,9 +69,9 @@\n     // to change background of text\r\n     // wrap it in material\r\n     return Column(\r\n       mainAxisAlignment: MainAxisAlignment.start,\r\n-      crossAxisAlignment: CrossAxisAlignment.end,\r\n+      crossAxisAlignment:isUser?CrossAxisAlignment.end:CrossAxisAlignment.start,\r\n       children: [\r\n         Text(\r\n           mSender,\r\n           style: TextStyle(\r\n"
                },
                {
                    "date": 1633772738546,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -83,14 +83,14 @@\n             padding: EdgeInsets.symmetric(horizontal: 20, vertical: 5),\r\n             child: Material(\r\n                 elevation: 5,\r\n                 borderRadius: BorderRadius.circular(30),\r\n-                color: Colors.lightBlueAccent,\r\n+                color:isUser?Colors.lightBlueAccent:Colors.white10,\r\n                 child: Padding(\r\n                   padding: EdgeInsets.all(10),\r\n                   child: Text(\r\n                     mText,\r\n-                    style: TextStyle(fontSize: 20, color: Colors.white),\r\n+                    style: TextStyle(fontSize: 20, color: isUser?Colors.white:Colors.black12),\r\n                   ),\r\n                 ))),\r\n       ],\r\n     );\r\n"
                },
                {
                    "date": 1633774376318,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -82,9 +82,10 @@\n         Padding(\r\n             padding: EdgeInsets.symmetric(horizontal: 20, vertical: 5),\r\n             child: Material(\r\n                 elevation: 5,\r\n-                borderRadius: BorderRadius.circular(30),\r\n+                // put border for each side excet the side of right or left depending on the user\r\n+                borderRadius: BorderRadius.only(bottomRight:Radius.circular(30),bottomLeft: Radius.circular(30),topLeft: Radius.circular(isUser?30:0),topRight: Radius.circular(isUser?0:30)),\r\n                 color:isUser?Colors.lightBlueAccent:Colors.white10,\r\n                 child: Padding(\r\n                   padding: EdgeInsets.all(10),\r\n                   child: Text(\r\n"
                },
                {
                    "date": 1633774714312,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -83,9 +83,10 @@\n             padding: EdgeInsets.symmetric(horizontal: 20, vertical: 5),\r\n             child: Material(\r\n                 elevation: 5,\r\n                 // put border for each side excet the side of right or left depending on the user\r\n-                borderRadius: BorderRadius.only(bottomRight:Radius.circular(30),bottomLeft: Radius.circular(30),topLeft: Radius.circular(isUser?30:0),topRight: Radius.circular(isUser?0:30)),\r\n+                borderRadius: BorderRadius.only(bottomRight:Radius.circular(30),bottomLeft: Radius.circular(30),\r\n+                topLeft: Radius.circular(isUser?30:0),topRight: Radius.circular(isUser?0:30)),\r\n                 color:isUser?Colors.lightBlueAccent:Colors.white10,\r\n                 child: Padding(\r\n                   padding: EdgeInsets.all(10),\r\n                   child: Text(\r\n@@ -95,5 +96,5 @@\n                 ))),\r\n       ],\r\n     );\r\n   }\r\n-}\r\n+  }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1633774729382,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,15 +36,13 @@\n \r\n           // get loggined user email\r\n           final currentUser = logIn.email;\r\n \r\n-          \r\n-            messageBubbles.add(MessageBubble(\r\n-              mText: messageText,\r\n-              mSender: messageSnder,\r\n-              isUser: messageSnder==currentUser,\r\n-            ));\r\n-          \r\n+          messageBubbles.add(MessageBubble(\r\n+            mText: messageText,\r\n+            mSender: messageSnder,\r\n+            isUser: messageSnder == currentUser,\r\n+          ));\r\n         }\r\n \r\n         return Expanded(\r\n           child: ListView(\r\n@@ -62,16 +60,17 @@\n   // make them final to be intialize once at conxtructor\r\n   final String mText, mSender;\r\n   final isUser;\r\n \r\n-  MessageBubble({this.mText, this.mSender, this.isUser);\r\n+  MessageBubble({this.mText, this.mSender, this.isUser});\r\n   @override\r\n   Widget build(BuildContext context) {\r\n     // to change background of text\r\n     // wrap it in material\r\n     return Column(\r\n       mainAxisAlignment: MainAxisAlignment.start,\r\n-      crossAxisAlignment:isUser?CrossAxisAlignment.end:CrossAxisAlignment.start,\r\n+      crossAxisAlignment:\r\n+          isUser ? CrossAxisAlignment.end : CrossAxisAlignment.start,\r\n       children: [\r\n         Text(\r\n           mSender,\r\n           style: TextStyle(\r\n@@ -83,18 +82,23 @@\n             padding: EdgeInsets.symmetric(horizontal: 20, vertical: 5),\r\n             child: Material(\r\n                 elevation: 5,\r\n                 // put border for each side excet the side of right or left depending on the user\r\n-                borderRadius: BorderRadius.only(bottomRight:Radius.circular(30),bottomLeft: Radius.circular(30),\r\n-                topLeft: Radius.circular(isUser?30:0),topRight: Radius.circular(isUser?0:30)),\r\n-                color:isUser?Colors.lightBlueAccent:Colors.white10,\r\n+                borderRadius: BorderRadius.only(\r\n+                    bottomRight: Radius.circular(30),\r\n+                    bottomLeft: Radius.circular(30),\r\n+                    topLeft: Radius.circular(isUser ? 30 : 0),\r\n+                    topRight: Radius.circular(isUser ? 0 : 30)),\r\n+                color: isUser ? Colors.lightBlueAccent : Colors.white10,\r\n                 child: Padding(\r\n                   padding: EdgeInsets.all(10),\r\n                   child: Text(\r\n                     mText,\r\n-                    style: TextStyle(fontSize: 20, color: isUser?Colors.white:Colors.black12),\r\n\\ No newline at end of file\n+                    style: TextStyle(\r\n+                        fontSize: 20,\r\n+                        color: isUser ? Colors.white : Colors.black12),\r\n                   ),\r\n                 ))),\r\n       ],\r\n     );\r\n   }\r\n-  }\n+}\r\n"
                },
                {
                    "date": 1633775068375,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -87,9 +87,9 @@\n                     bottomRight: Radius.circular(30),\r\n                     bottomLeft: Radius.circular(30),\r\n                     topLeft: Radius.circular(isUser ? 30 : 0),\r\n                     topRight: Radius.circular(isUser ? 0 : 30)),\r\n-                color: isUser ? Colors.lightBlueAccent : Colors.white10,\r\n+                color: isUser ? Colors.lightBlueAccent : Colors.white,\r\n                 child: Padding(\r\n                   padding: EdgeInsets.all(10),\r\n                   child: Text(\r\n                     mText,\r\n"
                },
                {
                    "date": 1633775095089,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -94,9 +94,9 @@\n                   child: Text(\r\n                     mText,\r\n                     style: TextStyle(\r\n                         fontSize: 20,\r\n-                        color: isUser ? Colors.white : Colors.black12),\r\n+                        color: isUser ? Colors.white : Colors.black),\r\n                   ),\r\n                 ))),\r\n       ],\r\n     );\r\n"
                },
                {
                    "date": 1633775383646,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -94,9 +94,9 @@\n                   child: Text(\r\n                     mText,\r\n                     style: TextStyle(\r\n                         fontSize: 20,\r\n-                        color: isUser ? Colors.white : Colors.black),\r\n+                        color: isUser ? Colors.white : Colors.black54),\r\n                   ),\r\n                 ))),\r\n       ],\r\n     );\r\n"
                },
                {
                    "date": 1633858598015,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -85,9 +85,9 @@\n                 // put border for each side excet the side of right or left depending on the user\r\n                 borderRadius: BorderRadius.only(\r\n                     bottomRight: Radius.circular(30),\r\n                     bottomLeft: Radius.circular(30),\r\n-                    topLeft: Radius.circular(isUser ? 30 : 0),\r\n+                    topLeft: Radius.circular(30),\r\n                     topRight: Radius.circular(isUser ? 0 : 30)),\r\n                 color: isUser ? Colors.lightBlueAccent : Colors.white,\r\n                 child: Padding(\r\n                   padding: EdgeInsets.all(10),\r\n"
                },
                {
                    "date": 1633863818184,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -45,8 +45,9 @@\n         }\r\n \r\n         return Expanded(\r\n           child: ListView(\r\n+            // to make it sticky to last message\r\n             padding: EdgeInsets.symmetric(horizontal: 5, vertical: 10),\r\n             children: messageBubbles,\r\n           ),\r\n         );\r\n"
                },
                {
                    "date": 1633864019863,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -84,12 +84,12 @@\n             child: Material(\r\n                 elevation: 5,\r\n                 // put border for each side excet the side of right or left depending on the user\r\n                 borderRadius: BorderRadius.only(\r\n-                    bottomRight: Radius.circular(30),\r\n-                    bottomLeft: Radius.circular(30),\r\n-                    topLeft: Radius.circular(30),\r\n-                    topRight: Radius.circular(isUser ? 0 : 30)),\r\n+                  bottomRight: Radius.circular(30),\r\n+                  bottomLeft: Radius.circular(30),\r\n+                  topLeft: Radius.circular(30),\r\n+                ),\r\n                 color: isUser ? Colors.lightBlueAccent : Colors.white,\r\n                 child: Padding(\r\n                   padding: EdgeInsets.all(10),\r\n                   child: Text(\r\n"
                },
                {
                    "date": 1633864075483,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -71,25 +71,28 @@\n       mainAxisAlignment: MainAxisAlignment.start,\r\n       crossAxisAlignment:\r\n           isUser ? CrossAxisAlignment.end : CrossAxisAlignment.start,\r\n       children: [\r\n-        Text(\r\n-          mSender,\r\n-          style: TextStyle(\r\n-              fontSize: 12,\r\n-              // color to make it little lighter\r\n-              color: Colors.black54),\r\n+        Padding(\r\n+          padding: EdgeInsets.symmetric(horizontal: 20, vertical: 5),\r\n+          child: Text(\r\n+            mSender,\r\n+            style: TextStyle(\r\n+                fontSize: 12,\r\n+                // color to make it little lighter\r\n+                color: Colors.black54),\r\n+          ),\r\n         ),\r\n         Padding(\r\n             padding: EdgeInsets.symmetric(horizontal: 20, vertical: 5),\r\n             child: Material(\r\n                 elevation: 5,\r\n                 // put border for each side excet the side of right or left depending on the user\r\n                 borderRadius: BorderRadius.only(\r\n-                  bottomRight: Radius.circular(30),\r\n-                  bottomLeft: Radius.circular(30),\r\n-                  topLeft: Radius.circular(30),\r\n-                ),\r\n+                    bottomRight: Radius.circular(30),\r\n+                    bottomLeft: Radius.circular(30),\r\n+                    topLeft: Radius.circular(30),\r\n+                    topRight: Radius.circular(isUser ? 0 : 30)),\r\n                 color: isUser ? Colors.lightBlueAccent : Colors.white,\r\n                 child: Padding(\r\n                   padding: EdgeInsets.all(10),\r\n                   child: Text(\r\n"
                },
                {
                    "date": 1633864211848,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -45,8 +45,9 @@\n         }\r\n \r\n         return Expanded(\r\n           child: ListView(\r\n+            reverse: true,\r\n             // to make it sticky to last message\r\n             padding: EdgeInsets.symmetric(horizontal: 5, vertical: 10),\r\n             children: messageBubbles,\r\n           ),\r\n"
                },
                {
                    "date": 1633864236748,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,9 +23,9 @@\n \r\n         // now we have access to context and snap shot that contain streams\r\n         // this snap shot cntain Query Snap Shot from fire base\r\n         // to specify what kind of returnded data --> make stream builder of Query Snap Shot\r\n-        final messages = snapshot.data.docs;\r\n+        final messages = snapshot.data.docs.reversed;\r\n         // return list of Query Document Snap Shot\r\n         // so we must iterate in it to get all its elemnts\r\n         List<MessageBubble> messageBubbles = [];\r\n \r\n"
                },
                {
                    "date": 1633864410674,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,9 +23,9 @@\n \r\n         // now we have access to context and snap shot that contain streams\r\n         // this snap shot cntain Query Snap Shot from fire base\r\n         // to specify what kind of returnded data --> make stream builder of Query Snap Shot\r\n-        final messages = snapshot.data.docs.reversed;\r\n+        final messages = snapshot.data.docs;\r\n         // return list of Query Document Snap Shot\r\n         // so we must iterate in it to get all its elemnts\r\n         List<MessageBubble> messageBubbles = [];\r\n \r\n"
                },
                {
                    "date": 1633864425290,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,9 +23,9 @@\n \r\n         // now we have access to context and snap shot that contain streams\r\n         // this snap shot cntain Query Snap Shot from fire base\r\n         // to specify what kind of returnded data --> make stream builder of Query Snap Shot\r\n-        final messages = snapshot.data.docs;\r\n+        final messages = snapshot.data.docs.reversed;\r\n         // return list of Query Document Snap Shot\r\n         // so we must iterate in it to get all its elemnts\r\n         List<MessageBubble> messageBubbles = [];\r\n \r\n"
                },
                {
                    "date": 1633864447768,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,9 +23,9 @@\n \r\n         // now we have access to context and snap shot that contain streams\r\n         // this snap shot cntain Query Snap Shot from fire base\r\n         // to specify what kind of returnded data --> make stream builder of Query Snap Shot\r\n-        final messages = snapshot.data.docs.reversed;\r\n+        final messages = snapshot.data.docs;\r\n         // return list of Query Document Snap Shot\r\n         // so we must iterate in it to get all its elemnts\r\n         List<MessageBubble> messageBubbles = [];\r\n \r\n"
                },
                {
                    "date": 1633864454734,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -45,9 +45,8 @@\n         }\r\n \r\n         return Expanded(\r\n           child: ListView(\r\n-            reverse: true,\r\n             // to make it sticky to last message\r\n             padding: EdgeInsets.symmetric(horizontal: 5, vertical: 10),\r\n             children: messageBubbles,\r\n           ),\r\n"
                },
                {
                    "date": 1633865313061,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -45,8 +45,9 @@\n         }\r\n \r\n         return Expanded(\r\n           child: ListView(\r\n+            reverse: true,\r\n             // to make it sticky to last message\r\n             padding: EdgeInsets.symmetric(horizontal: 5, vertical: 10),\r\n             children: messageBubbles,\r\n           ),\r\n"
                },
                {
                    "date": 1633865675937,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,9 +23,9 @@\n \r\n         // now we have access to context and snap shot that contain streams\r\n         // this snap shot cntain Query Snap Shot from fire base\r\n         // to specify what kind of returnded data --> make stream builder of Query Snap Shot\r\n-        final messages = snapshot.data.docs;\r\n+        final messages = snapshot.data.docs.reversed;\r\n         // return list of Query Document Snap Shot\r\n         // so we must iterate in it to get all its elemnts\r\n         List<MessageBubble> messageBubbles = [];\r\n \r\n"
                }
            ],
            "date": 1633529041137,
            "name": "Commit-0",
            "content": "import 'package:cloud_firestore/cloud_firestore.dart';\r\nimport 'package:flutter/material.dart';\r\n\r\nimport 'message_bubble.dart';\r\n\r\nclass MessageStram extends StatelessWidget {\r\n  final fireStore;\r\n  MessageStram({this.fireStore});\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    return // stream- -> that where data comes from\r\n        // builder build stargey --> provide the logic for the stream should actually do\r\n        // each update will provide an Async snap shot which the most interaction with stream\r\n        StreamBuilder<QuerySnapshot>(\r\n      stream: fireStore.collection('messages').snapshots(),\r\n      builder: (context, snapshot) {\r\n        if (!snapshot.hasData) {\r\n          return Center(\r\n              child: CircularProgressIndicator(\r\n            backgroundColor: Colors.lightBlueAccent,\r\n          ));\r\n        }\r\n\r\n        // now we have access to context and snap shot that contain streams\r\n        // this snap shot cntain Query Snap Shot from fire base\r\n        // to specify what kind of returnded data --> make stream builder of Query Snap Shot\r\n        final messages = snapshot.data.docs;\r\n        // return list of Query Document Snap Shot\r\n        // so we must iterate in it to get all its elemnts\r\n        List<MessageBubble> BubbleWidgets = [];\r\n        for (var message in messages) {\r\n          final mapData = message.data() as Map<String, dynamic>;\r\n          final messageText = mapData['text'];\r\n          final messageSnder = mapData['sender'];\r\n\r\n          // then add it to list\r\n          BubbleWidgets.add(\r\n              MessageBubble(mText: messageText, mSender: messageSnder));\r\n        }\r\n\r\n        return Expanded(\r\n          child: ListView(\r\n            padding: EdgeInsets.symmetric(horizontal: 5, vertical: 10),\r\n            children: BubbleWidgets,\r\n          ),\r\n        );\r\n      },\r\n    );\r\n  }\r\n}\r\n"
        }
    ]
}